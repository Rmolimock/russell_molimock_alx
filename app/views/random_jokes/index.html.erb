<style style="display: none;">

#new-jokes-link, #new-jokes-link-m {
  text-decoration: underline;
}

</style>

<script style="display: none;">



function handleFormSubmit(event) {
  event.preventDefault();
  const form = event.target.closest('form');
  const apiUrl = form.dataset.apiUrl;

  fetch(form.action, {
    method: form.method,
    body: new FormData(form),
    headers: { 'Accept': 'application/json' },
  })
  .then(response => response.json())
  .then(data => {
    fetchNewJoke(form, apiUrl);
    showSaveSuccess();
  })
  .catch(error => {
    console.error(error);
  });
}

function handleRefreshJoke(event) {
  event.preventDefault();
  const form = event.target.closest('form');
  const apiUrl = form.dataset.apiUrl;
  fetchNewJoke(form, apiUrl);
}


function fetchNewJoke(form, apiUrl) {
  fetch(apiUrl, {
    method: 'GET',
    headers: { 'Accept': 'application/json' },
  })
  .then(response => response.json())
  .then(data => {
    const jokeCardContent = form.querySelector('.card-content.grey.lighten-3');
    let joke;

    if (apiUrl === '/new_dad_joke') {
      joke = data.joke;
    } else if (apiUrl === '/new_official_joke') {
      joke = data.joke;
    } else if (apiUrl === '/new_jokeapi_joke') {
      joke = data.setup ? data.setup + ' ' + data.delivery : data.joke;
    } else if (apiUrl === '/new_geek_joke') {
      joke = data.joke;
    }

    jokeCardContent.textContent = joke;
    const jokeContentInput = form.querySelector('input[name="joke[content]"]');
    jokeContentInput.value = joke;
  })
  .catch(error => {
    console.error(error);
  });
}



function showSaveSuccess() {
  const saveSuccess = document.getElementById('save-success');
  saveSuccess.classList.remove('hidden');
  saveSuccess.style.opacity = '1';

  setTimeout(() => {
    saveSuccess.style.opacity = '0';
    setTimeout(() => {
      saveSuccess.classList.add('hidden');
    }, 400);
  }, 400);
}

function reloadAll() {
  const jokeCards = document.querySelectorAll('.card.joke-card');
  jokeCards.forEach(card => {
    const form = card
    const apiUrl = form.dataset.apiUrl;
    console.log(apiUrl, form);
    fetchNewJoke(form, apiUrl);
  });
}

document.addEventListener('DOMContentLoaded', () => {
const reloadButton = document.getElementById('reload_all_jokes');
  const tooltip = document.getElementById('reloader_details');

  reloadButton.addEventListener('mouseenter', () => {
    tooltip.classList.remove('hidden');
  });

  reloadButton.addEventListener('mouseleave', () => {
    tooltip.classList.add('hidden');
  });

  function reloadAll() {
    // Your existing code for reloading all jokes
  }
});


</script>

<tooltip id="reloader_details" class="hidden">Reload all jokes</tooltip>

<button id="reload_all_jokes" class="btn-floating grey lighten-3 f-largest" onclick=reloadAll()>
&#8634;

</button>


<section id="new-jokes" class="column">

<div class="flex-wrap">

<% if @random_dad_joke.present? %>

  <%= form_with model: Joke.new, url: jokes_path, local: true, html: {id: "dad-joke-form", 'data-remote': "true", 'data-api-url': "/new_dad_joke", class: "card joke-card column"} do |form| %>
    <span class="f-large bold">From: <a href="https://icanhazdadjoke.com/api" target="_blank">icanhazdadjoke.com</a></span>
    <div class="w-100 card-content grey lighten-3">
    <%= @random_dad_joke %>
    </div>
    <%= form.hidden_field :content, value: @random_dad_joke %>
    <%= form.hidden_field :source, value: 'dad' %>
    <div class="justify-around w-100 funny-or-not">
        <%= form.button raw('&#8634;'), type: 'submit', onclick: "handleRefreshJoke(event)", class: "btn-floating grey lighten-3 border f-large" %>
      <%= form.button "ðŸ˜†", type: 'submit', onclick: "handleFormSubmit(event)", class: "btn-floating green lighten-2 border f-large" %>
    </div>
    <div id="save-success" class="save-success hidden">saved</div>
  <% end %>

<% else %>

  <p>Error: Sometimes a Dad joke is so bad, even the API refuses to serve them.</p>

<% end %>


<% if @random_jokeapi_joke.present? %>

  <%= form_with model: Joke.new, url: jokes_path, local: true, html: {id: "jokeapi-joke-form", 'data-remote': "true", 'data-api-url': "/new_jokeapi_joke", class: "card joke-card column"} do |form| %>
    <span class="f-large bold">From: <a href="https://jokeapi.dev/" target="_blank">jokeapi.dev</a></span>
    <div class="w-100 card-content grey lighten-3">
      <%= @random_jokeapi_joke %>
    </div>
    <%= form.hidden_field :content, value: @random_jokeapi_joke %>
    <%= form.hidden_field :source, value: 'jokesAPI' %>
    <div class="justify-around w-100 funny-or-not">
        <%= form.button raw('&#8634;'), type: 'submit', onclick: "handleRefreshJoke(event)", class: "btn-floating grey lighten-3 f-large" %>
      <%= form.button "ðŸ˜†", type: 'submit', onclick: "handleFormSubmit(event)", class: "btn-floating green lighten-1 f-large" %>
    </div>
  <% end %>

<% else %>
  <p>Error: JokeAPI didn't return 200. It must be kidding.</p>
<% end %>

</div>

<div class="flex-wrap align-start">

<% if @random_official_joke.present? %>

  <%= form_with model: Joke.new, url: jokes_path, local: true, html: {id: "official-joke-form", 'data-remote': "true", 'data-api-url': "/new_official_joke", class: "card joke-card column"} do |form| %>
    <span class="f-large bold">From: <a href="https://official-joke-api.appspot.com/random_joke" target="_blank">official-joke-api</a></span>
    <div class="w-100 card-content grey lighten-3">
      <%= @random_official_joke %>
    </div>
    <%= form.hidden_field :content, value: @random_official_joke %>
    <%= form.hidden_field :source, value: 'officialJokesAPI' %>
    <div class="justify-around w-100 funny-or-not">
        <%= form.button raw('&#8634;'), type: 'submit', onclick: "handleRefreshJoke(event)", class: "btn-floating grey lighten-3 f-large" %>
      <%= form.button "ðŸ˜†", type: 'submit', onclick: "handleFormSubmit(event)", class: "btn-floating green lighten-1 f-large" %>
    </div>
  <% end %>

<% else %>
  <p>Error: The Official Joke API is officially a joke. It returned a bad response, sorry!.</p>
<% end %>

<% if @random_geek_joke.present? %>

  <%= form_with model: Joke.new, url: jokes_path, local: true, html: {id: "geek-joke-form", 'data-remote': "true", 'data-api-url': "/new_geek_joke", class: "card joke-card column"} do |form| %>
    <span class="f-large bold">From: <a href="https://geek-jokes.sameerkumar.website/api" target="_blank">geek-jokes.sameerkumar</a></span>
    <div class="w-100 card-content grey lighten-3">
      <%= @random_geek_joke %>
    </div>
    <%= form.hidden_field :content, value: @random_geek_joke %>
    <%= form.hidden_field :source, value: 'geek' %>
    <div class="justify-around w-100 funny-or-not">
        <%= form.button raw('&#8634;'), type: 'submit', onclick: "handleRefreshJoke(event)", class: "btn-floating grey lighten-3 f-large" %>
      <%= form.button "ðŸ˜†", type: 'submit', onclick: "handleFormSubmit(event)", class: "btn-floating green lighten-1 f-large" %>
    </div>
  <% end %>

<% else %>
  <p>Error: The geeks at geek-jokes messed up. Bad response.</p>
<% end %>

</div>
</section>